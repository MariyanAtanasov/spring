package com.example.demo.rest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.*;

import com.example.demo.entities.User;
import com.example.demo.repository.UserRepository;
// This means that this class is a RestController
@RestController
// This means URL's start with /demo (after Application path)
@RequestMapping(path = "/demo")
public class UserController {
    // This means to get the bean called userRepository
    // which is auto-generated by Spring, we will use it to handle the data
    @Autowired
    private UserRepository userRepository;

//    @PostMapping(path = "/update", consumes = "application/json")
//    @ResponseStatus(HttpStatus.OK)
//    void updateUser(@RequestBody User user) {
//        employeeService.updateEmployee(employeeModel);
//    }

    @PostMapping(path = "/add")
    public @ResponseBody User addNewUser(@RequestParam String name
            ,@RequestParam String gender, @RequestParam String email) {
        // @ResponseBody means the returned User is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        User springUser = new User();
        springUser.setName(name);
        springUser.setGender(gender);
        springUser.setEmail(email);
        userRepository.save(springUser);
        return springUser;
    }

    @GetMapping(path = "/all")
    public @ResponseBody Iterable<User> getAllUsers() {
        // This returns a JSON or XML with the users
        return userRepository.findAll();
    }

}
